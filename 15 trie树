/*维护一个字符串集合，支持两种操作：
I x 向集合中插入一个字符串 x；
Q x 询问一个字符串在集合中出现了多少次。
共有 N个操作，所有输入的字符串总长度不超过 10e5，字符串仅包含  小写英文字母。
输入格式
第一行包含整数 N，表示操作数。接下来 N 行，每行包含一个操作指令，指令为 I x 或 Q x 中的一种。
输出格式
对于每个询问指令 Q x，都要输出一个整数作为结果，表示 x 在集合中出现的次数。每个结果占一行。*/

#include<iostream>
using namesapce std;
const int N = 100010;
int son[N][26], cnt[N], idx; //下标是0的点，既是根节点，又是空节点  cnt[x] 表示：以 编号为 x 为结尾的字符串的个数  idx为当前点的编号 
char str[N];
void insert(char str[])
{
  int p = 0;
  for(int i = 0; str[i]; i++)  //字符串结尾是\0 所以用str[i]来判断字符串是否结束
  {
    int u = str[i] - 'a';  //将字符转换为数字
    if(!son[p][u]) son[p][u] = ++ idx;  //如果son[p][u]不存在，就创建出来
    p = son[p][u];
  }
   //这个时候，p 等于字符串 s 的尾字符所对应的 idx
    //cnt[p] 保存的是字符串 s 出现的次数
    //故 cnt[p] ++
  cnt[p] ++;  
}

void query(char str[])
{
  int p = 0;
  for(int i = 0; str[i]; i++)
  {
    int u = str[i] - 'a';
    if(!son[p][u]) return 0;
    p = son[p][u];
  }
  return cnt[p];
}

int main()
{
  int n;
  scanf("%d", &n);
  while(n --)
  {
    char op[2];
    scanf("%s%s", op, str);
    if(op == 'I') insert(str);
    else   cout << query(s) << endl;
  }
  return 0;
}
