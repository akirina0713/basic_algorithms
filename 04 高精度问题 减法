
#include<iostream>
#include<vector>   //vector 是c++的一种容器，可以随时调整数组的长度
using namespace std;
        //减法

//C=A-B
bool cmp(vector<int>&A,vector<int>&B)
{
  if(A.size()!=B.size()) return A.size()>B.size();
  for(int i=A.size()-1;i>=0;i--)
    if(A[i]!=b[i])
      return A[i]>B[i];
return true;
}

//C=A-B
vectot<int>sub(vector<int>&A, vector<int>&B)//直接引用，将数组copy一遍 提高效率
{
    vector <int>C;
    int t = 0;
    for(int i=0,t=0;i<A.size();i++)
    {
      t-=A[i];
      if(i<B.size()) t-=B[i];
      C.push_back((t+10)%10);   //把t>=0和t<0时的情况合二为一：   t>=0时 （t+10）%10还是=t，t<0时 t=（t+10）
      if (t<0) t=1;   //判断是否要借位
      else t=0;
    }
    while (C.size()>1 && C.back()==0)  C.pop_back();  //去掉前导0   如 003 -> 3
    return C;
}

int main ()
{
  string a,b;
  vector<int>A,B;
    cin>>a>>b;     //a="123456"
    for(int i=a.size()-1;i>=0;i--) A.push_back(a[i]-'0');     //从个位数开时存，倒着存   A=[6,5,4,3,2,1]
    for(int i=b.size()-1;i>=0;i--) B.push_back(b[i]-'0');

  if(cmp(A,B))
{
    auto C=sub(A,B);   //auto  编译器自动推断变量的类型
    for(int i=C.size()-1;i>=0;i--) printf("%d",C[i]);
}
 else
{
    auto C=sub(B,A);
    printf("-");
    for(int i=C.size()-1;i>=0;i--) printf("%d",C[i]);
}

  }
